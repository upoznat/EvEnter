<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eventer.eventticket.dao.mapper.TicketMapper">

    <resultMap type="Ticket" id="ticket">
        <result property="id" column="id" />
        <result property="dateCreated" column="date_created" />
        <result property="dateModified" column="date_modified" />
        <result property="startDate" column="start_date" />
        <result property="price" column="price" />
        <result property="event.id" column="event_id" />
        <result property="customer.id" column="customer_id" />
        <result property="status" column="status" />
        <result property="transactionDetails" column="transaction_details" />
    </resultMap>


    <insert id="saveTicket" parameterType="Ticket">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            select
            seq_ticket.nextval from dual
        </selectKey>
        insert into ticket
        (id, date_created, date_modified, start_date, price, event_id, status)
        values
        (#{id}, sysdate, sysdate, #{startDate}, #{price}, #{event.id}, #{status})
    </insert>

    <update id="updateTicketsToStatus">
        update ticket
        set date_modified = sysdate,
            customer_id = #{customerId},
            status = #{status}
        <if test="details != null">, transaction_details = #{details} </if>
        where id in
        <foreach item="item" collection="ticketIds" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="getTicketsForEventWithLock" resultMap="ticket">
        select *
        from ticket
        where event_id = #{eventId} and
              status='Created' and rownum &lt;= #{numOfTickets}
        order by id asc
        for update
    </select>


<!--    <select id="findPaymentTransaction" parameterType="PaymentTransactionRequest" resultMap="paymentTransaction">-->
<!--        select * from payment_transaction-->
<!--        where customer_id = #{customerId}-->
<!--          and uuid = #{uuid}-->
<!--    </select>-->

</mapper>
